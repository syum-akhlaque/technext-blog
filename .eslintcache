[{"C:\\Web Development\\project\\technext-blog\\src\\index.js":"1","C:\\Web Development\\project\\technext-blog\\src\\reportWebVitals.js":"2","C:\\Web Development\\project\\technext-blog\\src\\App.js":"3","C:\\Web Development\\project\\technext-blog\\src\\Components\\Blog\\Blog.js":"4","C:\\Web Development\\project\\technext-blog\\src\\Components\\Header\\Header.js":"5","C:\\Web Development\\project\\technext-blog\\src\\Components\\PostDetails\\PostDetails.js":"6","C:\\Web Development\\project\\technext-blog\\src\\Components\\MyProfile\\MyProfile.js":"7","C:\\Web Development\\project\\technext-blog\\src\\Components\\User\\User.js":"8","C:\\Web Development\\project\\technext-blog\\src\\Components\\User\\UserList.js":"9","C:\\Web Development\\project\\technext-blog\\src\\Components\\User\\Pagination.js":"10","C:\\Web Development\\project\\technext-blog\\src\\Components\\NewPost\\AddNewPost.js":"11","C:\\Web Development\\project\\technext-blog\\src\\Components\\UpdatePost\\UpdatePost.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":1929,"mtime":1611853776338,"results":"16","hashOfConfig":"14"},{"size":2384,"mtime":1611856782001,"results":"17","hashOfConfig":"14"},{"size":475,"mtime":1611856795377,"results":"18","hashOfConfig":"14"},{"size":1554,"mtime":1611821955939,"results":"19","hashOfConfig":"14"},{"size":3367,"mtime":1611856918869,"results":"20","hashOfConfig":"14"},{"size":2919,"mtime":1611853041805,"results":"21","hashOfConfig":"14"},{"size":2040,"mtime":1611852954170,"results":"22","hashOfConfig":"14"},{"size":694,"mtime":1611597389229,"results":"23","hashOfConfig":"14"},{"size":1878,"mtime":1611856862831,"results":"24","hashOfConfig":"14"},{"size":1729,"mtime":1611856627839,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1nky89u",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Web Development\\project\\technext-blog\\src\\index.js",[],["57","58"],"C:\\Web Development\\project\\technext-blog\\src\\reportWebVitals.js",[],"C:\\Web Development\\project\\technext-blog\\src\\App.js",["59","60"],"import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Blog from './Components/Blog/Blog';\nimport Header from './Components/Header/Header';\nimport PostDetails from './Components/PostDetails/PostDetails';\nimport { createContext, useState } from 'react';\nimport MyProfile from './Components/MyProfile/MyProfile';\nimport User from './Components/User/User';\nimport AddNewPost from './Components/NewPost/AddNewPost';\nimport UpdatePost from './Components/UpdatePost/UpdatePost';\nexport const articleContext = createContext();\nexport const localStorageContext = createContext()\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(2); \n  const [store, setStore] = useState([])\n  const [currentArticle, setCurrentArticle] = useState({});\n  return (\n   \n     \n      <localStorageContext.Provider value={[store,setStore]}>\n      <articleContext.Provider value = {[currentArticle,setCurrentArticle]} >\n        <Router>\n        <Header></Header>\n         <Switch>\n         <Route exact path='/'>\n              <Blog ></Blog>\n           </Route>\n           <Route exact path='/blog'>\n              <Blog></Blog>\n           </Route>\n           <Route  path='/profile'>\n              <MyProfile></MyProfile>\n           </Route>\n           <Route exact path='/user'>\n              <User></User>\n           </Route>\n           <Route exact path='/addNewPost'>\n              <AddNewPost></AddNewPost>\n           </Route>\n           <Route exact path='/updatePost'>\n              <UpdatePost></UpdatePost>\n           </Route>\n           <Route  path='/post/:postId'>\n              <PostDetails></PostDetails>\n           </Route>\n           <Route path='*'>\n              <h2 style={{textAlign:\"center\"}}> 4O4  not found</h2>\n           </Route>\n         </Switch>\n       </Router>\n      </articleContext.Provider>\n      </localStorageContext.Provider>\n  );\n}\n\nexport default App;\n","C:\\Web Development\\project\\technext-blog\\src\\Components\\Blog\\Blog.js",["61","62","63"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { articleContext, localStorageContext } from '../../App';\r\nimport './Blog.css'\r\nconst Blog = () => {\r\n\r\n     \r\n    const [post, setPost] = useState([])\r\n    const [store, setStore] = useContext(localStorageContext)\r\n    let localStore = JSON.parse(localStorage.getItem('user')) ||[]\r\n   \r\n    if(post.length && store.length<1 && localStore.length==0){\r\n        localStorage.setItem('user',JSON.stringify(post))\r\n        const storageData = JSON.parse(localStorage.getItem('user')) \r\n        setStore(storageData)\r\n    }\r\n    \r\n    const [visiblePost, setVisiblePost] = useState(110)\r\n    const [currentArticle, setCurrentArticle] = useContext(articleContext)\r\n    const history = useHistory()\r\n    const handleCurrentArticle = (id, title, body)=>{\r\n        const currentArticleInfo ={\r\n            id: id,\r\n            title: title,\r\n            body: body\r\n        }\r\n        setCurrentArticle(currentArticleInfo)\r\n        history.push({ \r\n            pathname: `/post/${id}`,\r\n        });\r\n    }\r\n\r\n    const showMoreItems = ()=>{\r\n        setVisiblePost(preVal => preVal+10)\r\n    }\r\n\r\n     useEffect( ()=>{\r\n        fetch('https://jsonplaceholder.typicode.com/posts')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setPost(data)\r\n        })\r\n     }, [])\r\n   \r\n    return (\r\n        <div>\r\n           \r\n            <div className = 'row row-cols-md-5 px-5 blog '>\r\n                {\r\n                  localStore.length>0 && localStore.slice(0,visiblePost).map( post => \r\n                        <div className ='cards col mt-5 '  key={post._id} > \r\n                            <h5 className=\"card-title p-3\">{post.title.slice(0,30)}</h5>\r\n                            <p className=\"card-text\">{post.body.slice(0,95)} ...<span className='text-primary read-more' onClick = {()=>handleCurrentArticle(post.id, post.title, post.body)}> Read More </span></p>\r\n                        </div>  \r\n                    )\r\n                }\r\n            </div>\r\n          { (visiblePost <= post.length ) && <div className = 'text-center my-4'>\r\n              <button  onClick= {showMoreItems} className = ' btn btn-warning '>Load More</button>\r\n           </div>\r\n           }\r\n           \r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Blog;","C:\\Web Development\\project\\technext-blog\\src\\Components\\Header\\Header.js",[],"C:\\Web Development\\project\\technext-blog\\src\\Components\\PostDetails\\PostDetails.js",["64"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { articleContext } from '../../App';\r\nimport './PostDetails.css';\r\nimport user from '../FakeImage/0.jpg'\r\nconst PostDetails = () => {\r\n   \r\n    const [comments,setComments] = useState([])\r\n    const [currentArticle] = useContext(articleContext)\r\n    \r\n    useEffect(()=>\r\n        fetch(`https://jsonplaceholder.typicode.com/comments?postId=${currentArticle.id}`)\r\n        .then(response => response.json())\r\n        .then(data => setComments(data))\r\n        ,[])\r\n        \r\n    return (\r\n        <div>\r\n            <div className = \"postDetails\" > \r\n                <h1> {(currentArticle.title)}</h1>\r\n                <p> \"{currentArticle.body}\"</p> \r\n            </div>\r\n            <div className = \"commentSection\">\r\n                <h2 >Comments:</h2>\r\n                <ul>\r\n                    {\r\n                        comments.map(comment => <li>  \r\n                            <div className = \"singleComment\">\r\n                                <div>\r\n                                    <img src={user} alt=\"\" width ='100px'/>\r\n                                </div>\r\n                                <div>\r\n                                    <h4>Email: {comment.email}</h4>\r\n                                    <p> {comment.body}</p>\r\n                                </div>    \r\n                            </div>\r\n                        </li>)\r\n                    }\r\n\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostDetails;","C:\\Web Development\\project\\technext-blog\\src\\Components\\MyProfile\\MyProfile.js",["65","66"],"import React, { useContext } from 'react';\r\nimport {  useHistory,  } from 'react-router-dom';\r\nimport { articleContext, localStorageContext,  } from '../../App';\r\nimport './MyProfile.css'\r\nconst MyProfile = () => {\r\n   const currentUser =  parseInt(localStorage.getItem('currentUser')) || 2\r\n   \r\n    let localStore = JSON.parse(localStorage.getItem('user')) ||[]\r\n    const [currentArticle, setCurrentArticle] = useContext(articleContext)\r\n\r\n    const currentUserPost = localStore.length>0 && localStore.filter( item => item.userId === currentUser) \r\n    const history = useHistory()\r\n    const handleCurrentArticle = (id, title, body)=>{\r\n        const currentArticleInfo ={\r\n            id: id,\r\n            title: title,\r\n            body: body\r\n        }\r\n        setCurrentArticle(currentArticleInfo) // set this article as current through usecontext hook \r\n        history.push({\r\n            pathname: `/post/${id}`,\r\n        })\r\n    }\r\n\r\n    const handleAddNewPost =()=>{\r\n        history.push({\r\n            pathname: '/addNewPost',\r\n            state: currentUser\r\n        })\r\n    }\r\n\r\n    const handleDeletePost =(id)=>{\r\n        if(localStore.length>0) {\r\n            \r\n            const newLocalStore = localStore.filter( item => item.id !== id)\r\n            localStorage.setItem('user',JSON.stringify(newLocalStore))\r\n            localStorage.setItem('currentUser',`${currentUser}`)\r\n             window.location.reload(true); \r\n        }\r\n    }\r\n   \r\n    const handleUpdatePost = (id, title, body)=>{\r\n        const updatableArticleInfo ={\r\n            id: id,\r\n            title: title,\r\n            body: body\r\n        }\r\n        setCurrentArticle(updatableArticleInfo)\r\n        history.push({\r\n            pathname: '/updatePost',\r\n            // state: updatableArticleInfo\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n           \r\n            <div className = 'row my-profile px-5'>\r\n           <div className = 'p-4 bg-secondary text-center text-white mt-5'>\r\n\r\n               <h2>USER INFO</h2>\r\n               <h4>User ID: {currentUser || 2}</h4> \r\n               \r\n               <button onClick={()=>handleAddNewPost()} className = 'btn btn-primary'>Add New Post</button> \r\n                \r\n           </div>\r\n                {\r\n                    currentUserPost.map( post => \r\n                        <div className =' col-md-3 card mt-5 '  key={post._id} > \r\n                            <div className=\"card-body  \">\r\n                                <h5 className=\"card-title p-3\">{post.title.slice(0,35)}</h5>\r\n                                <p className=\"card-text p-3\">{post.body.slice(0,94)}<span className='text-primary read-more' onClick = {()=>handleCurrentArticle(post.id, post.title, post.body)}> Read More </span></p>\r\n                            </div>\r\n                             <div className=\"card-footer d-flex justify-content-between\">\r\n                               <button onClick={()=>handleUpdatePost(post.id,post.title, post.body)} className = 'btn btn-primary'> Update</button> \r\n                               <button onClick={()=>handleDeletePost(post.id)} className = 'btn btn-primary'>Delete</button>\r\n                            </div>\r\n                        </div>     \r\n                    )\r\n                }\r\n            </div> \r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyProfile;","C:\\Web Development\\project\\technext-blog\\src\\Components\\User\\User.js",[],"C:\\Web Development\\project\\technext-blog\\src\\Components\\User\\UserList.js",["67"],"import React, { useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst UserList = ({user}) => {\r\n\r\n    const sortTable = (col=0)=>  {\r\n        let table, rows, switching, i, x, y, shouldSwitch;\r\n        table = document.getElementById(\"userTable\");\r\n        switching = true;\r\n       \r\n        while (switching) {\r\n          switching = false;\r\n          rows = table.rows;\r\n          \r\n          for (i = 0; i < (rows.length - 1); i++) {\r\n            shouldSwitch = false;\r\n            x = rows[i].getElementsByTagName(\"TD\")[col];\r\n            y = rows[i + 1].getElementsByTagName(\"TD\")[col];\r\n\r\n            if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\r\n              shouldSwitch = true;\r\n              break;\r\n            }\r\n          }\r\n          if (shouldSwitch) {\r\n            rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\r\n            switching = true;\r\n          }\r\n        }\r\n      }\r\n      const history = useHistory()\r\n      const handleUserProfile = (id)=>{\r\n        // setCurrentUser(id)\r\n        localStorage.setItem('currentUser',`${id}`)\r\n        history.push({\r\n          pathname: `/profile`,\r\n        })\r\n      }\r\n      \r\n    console.log(user)\r\n    return (\r\n        <div>\r\n             {user.length && <table id=\"userTable\" className = 'table table-striped my-5 w-75 mx-auto'>\r\n                <thead>\r\n                    <th onClick = {()=>sortTable(0)}>Name</th>\r\n                    <th onClick = {()=>sortTable(1)}>Email </th>\r\n                    <th onClick = {()=>sortTable(2)}>Web Site</th>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                   user.map( row =>\r\n                    <tr>\r\n                        <td onClick = {()=>handleUserProfile(row.id)}>{row.name}</td>\r\n                        <td>{row.email}</td>\r\n                        <td>{row.website}</td>\r\n                    </tr>)\r\n                }\r\n                </tbody>\r\n            </table>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserList;",["68","69"],"C:\\Web Development\\project\\technext-blog\\src\\Components\\User\\Pagination.js",[],"C:\\Web Development\\project\\technext-blog\\src\\Components\\NewPost\\AddNewPost.js",[],"C:\\Web Development\\project\\technext-blog\\src\\Components\\UpdatePost\\UpdatePost.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":19,"column":10,"nodeType":"76","messageId":"77","endLine":19,"endColumn":21},{"ruleId":"74","severity":1,"message":"78","line":19,"column":23,"nodeType":"76","messageId":"77","endLine":19,"endColumn":37},{"ruleId":"74","severity":1,"message":"79","line":2,"column":10,"nodeType":"76","messageId":"77","endLine":2,"endColumn":14},{"ruleId":"80","severity":1,"message":"81","line":12,"column":58,"nodeType":"82","messageId":"83","endLine":12,"endColumn":60},{"ruleId":"74","severity":1,"message":"84","line":19,"column":12,"nodeType":"76","messageId":"77","endLine":19,"endColumn":26},{"ruleId":"85","severity":1,"message":"86","line":14,"column":10,"nodeType":"87","endLine":14,"endColumn":12,"suggestions":"88"},{"ruleId":"74","severity":1,"message":"89","line":3,"column":26,"nodeType":"76","messageId":"77","endLine":3,"endColumn":45},{"ruleId":"74","severity":1,"message":"84","line":9,"column":12,"nodeType":"76","messageId":"77","endLine":9,"endColumn":26},{"ruleId":"74","severity":1,"message":"90","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":27},{"ruleId":"70","replacedBy":"91"},{"ruleId":"72","replacedBy":"92"},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'currentUser' is assigned a value but never used.","Identifier","unusedVar","'setCurrentUser' is assigned a value but never used.","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'currentArticle' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentArticle.id'. Either include it or remove the dependency array.","ArrayExpression",["95"],"'localStorageContext' is defined but never used.","'useContext' is defined but never used.",["93"],["94"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},"Update the dependencies array to be: [currentArticle.id]",{"range":"98","text":"99"},[531,533],"[currentArticle.id]"]